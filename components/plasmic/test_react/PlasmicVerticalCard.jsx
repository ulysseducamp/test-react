// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2L9hCuMqFA6xYDgKyhGrtm
// Component: 5EaK3yGZLLC1K
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_test_react.module.css"; // plasmic-import: 2L9hCuMqFA6xYDgKyhGrtm/projectcss
import sty from "./PlasmicVerticalCard.module.css"; // plasmic-import: 5EaK3yGZLLC1K/css

export const PlasmicVerticalCard__VariantProps = new Array();

export const PlasmicVerticalCard__ArgProps = new Array(
  "children",
  "slot",
  "slot2",
  "slot3"
);

function PlasmicVerticalCard__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {p.renderPlasmicSlot({
        defaultContents: (
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__eiZK)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={{
              src: "/plasmic/test_react/images/jujotteThumbnailpng.png",
              fullWidth: 684,
              fullHeight: 684,
              aspectRatio: undefined
            }}
          />
        ),

        value: args.children
      })}

      <div className={classNames(projectcss.all, sty.freeBox__jgLe8)}>
        <div className={classNames(projectcss.all, sty.freeBox___00MeS)}>
          <div className={classNames(projectcss.all, sty.freeBox__fi4Fy)}>
            {p.renderPlasmicSlot({
              defaultContents: "Title",
              value: args.slot,
              className: classNames(sty.slotTargetSlot)
            })}
          </div>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox__pp8N0)}>
          <div className={classNames(projectcss.all, sty.freeBox__cU9H0)}>
            {p.renderPlasmicSlot({
              defaultContents: "Subtitle",
              value: args.slot2,
              className: classNames(sty.slotTargetSlot2)
            })}
          </div>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox___0K0C)}>
          <div className={classNames(projectcss.all, sty.freeBox__kCoyy)}>
            {p.renderPlasmicSlot({
              defaultContents: "detail",
              value: args.slot3,
              className: classNames(sty.slotTargetSlot3)
            })}
          </div>
        </div>
      </div>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicVerticalCard__ArgProps,
      internalVariantPropNames: PlasmicVerticalCard__VariantProps
    });

    return PlasmicVerticalCard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicVerticalCard";
  } else {
    func.displayName = `PlasmicVerticalCard.${nodeName}`;
  }
  return func;
}

export const PlasmicVerticalCard = Object.assign(
  // Top-level PlasmicVerticalCard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicVerticalCard
    internalVariantProps: PlasmicVerticalCard__VariantProps,
    internalArgProps: PlasmicVerticalCard__ArgProps
  }
);

export default PlasmicVerticalCard;
/* prettier-ignore-end */
